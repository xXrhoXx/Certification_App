@page "/"
@rendermode InteractiveServer
@inject NavigationManager NavigationManager;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization
<!--using NetcodeHub.Packages.Extensions.LocalStorage;
using NetcodeHub.Packages.Extensions.SessionStorage;
inject ILocalStorageService localStorageService;
inject ISessionStorageService sessionStorageService;-->

<PageTitle>Home</PageTitle>

<div class="row">
    <div class="col-12">
        <h2 class="fw-bolder">Welcome to <br /><span class="text-black">ARISE</span></h2>
        <p>(Assessment and Reporting Intelligent System for Efficiency)</p>
    </div>
    <div class="col-12">
        <div class="card">
            <div class="card-body">
                <Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
                    <NotAuthorized>
                        <span>You are not logged in. Please <a class="fw-bolder" href="/login">click here</a> to login.</span>
                    </NotAuthorized>
                    <Authorized>
                        <span>Logged in as <b>@context?.User?.Identity?.Name</b>. <a class="fw-bolder" href="/logout">Click here</a> to Logout</span>
                    </Authorized>
                </Microsoft.AspNetCore.Components.Authorization.AuthorizeView>
            </div>
        </div>
    </div>
</div>


    <!--span>You are not logged in. Please <a class="fw-bolder" href="/login">click here</a> to login.</span-->

@code{
    /*
    string Content;
    bool authorized = false;

    protected override async Task OnInitializedAsync()
        {
        if (GetName() == null && GetEmail() == null && GetId() == null)
     {
        true;
        }
        async Task GetName() => await localStorageService.GetItemAsStringAsync("name");
        async Task GetEmail() => await localStorageService.GetItemAsStringAsync("email");
        async Task GetId() => await localStorageService.GetItemAsStringAsync("id");
    }
    void NavigateToLogin() => NavigationManager.NavigateTo("/Logins/Login");
    */
}